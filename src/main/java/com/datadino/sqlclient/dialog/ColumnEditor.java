/*
 * ColumnEditor.java
 *
 * Created on July 30, 2003, 8:39 PM
 */

package com.datadino.sqlclient.dialog;

import java.awt.*;
import java.awt.event.*;

import javax.swing.*;

import com.dnsalias.java.sqlclient.*;
import com.dnsalias.java.sqlclient.dialog.*;
import com.dnsalias.java.sqlclient.validation.*;
import com.dnsalias.java.sqlclient.util.*;

/**
 *
 * @author  jbanes
 */
public class ColumnEditor extends JDialog 
{    
    private SQLClientHandler handler;
    private String tableName;
    
    /** Creates new form ColumnEditor */
    public ColumnEditor(String tableName, Frame parent, boolean modal) 
    {
        super(parent, modal);
        
        String[] choices;
        LengthEditor length = new LengthEditor();
        
        this.handler = SQLClientHandler.getCurrentHandler();
        this.tableName = tableName;
        
        initComponents();
        
        //TEMPORARY UNTIL PROPER SUPPORT FOR DEFAULTS CAN BE ADDED\\
        jLabel3.setVisible(false);
        defaultValue.setVisible(false);
        //TEMPORARY UNTIL PROPER SUPPORT FOR DEFAULTS CAN BE ADDED\\
        
        length.setBounds(this.length.getBounds());
        getContentPane().remove(this.length);
        getContentPane().add(length);
        this.length = length;
        
        choices = handler.getCurrentProfile().getDataTypes();
        
        for(int i=0; i<choices.length; i++) type.addItem(choices[i]);
        
        if(handler.getCurrentProfile().autonumber.isDisabled()) autonumber.setEnabled(false);
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents
        name = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        type = new javax.swing.JComboBox();
        jLabel2 = new javax.swing.JLabel();
        nullable = new javax.swing.JCheckBox();
        jLabel3 = new javax.swing.JLabel();
        defaultValue = new javax.swing.JTextField();
        autonumber = new javax.swing.JCheckBox();
        ok = new javax.swing.JButton();
        cancel = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        length = new javax.swing.JTextField();

        getContentPane().setLayout(null);

        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                closeDialog(evt);
            }
        });

        name.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nameActionPerformed(evt);
            }
        });

        getContentPane().add(name);
        name.setBounds(10, 30, 100, 24);

        jLabel1.setText("Name");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(10, 10, 60, 14);

        type.setEditable(true);
        getContentPane().add(type);
        type.setBounds(120, 30, 100, 24);

        jLabel2.setText("Type");
        getContentPane().add(jLabel2);
        jLabel2.setBounds(120, 10, 41, 14);

        nullable.setSelected(true);
        nullable.setText("Nullable");
        getContentPane().add(nullable);
        nullable.setBounds(20, 70, 93, 22);

        jLabel3.setText("Default");
        getContentPane().add(jLabel3);
        jLabel3.setBounds(130, 60, 70, 14);

        getContentPane().add(defaultValue);
        defaultValue.setBounds(130, 80, 150, 24);

        autonumber.setText("Autonumber");
        getContentPane().add(autonumber);
        autonumber.setBounds(20, 90, 110, 22);

        ok.setText("Ok");
        ok.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                okActionPerformed(evt);
            }
        });

        getContentPane().add(ok);
        ok.setBounds(120, 120, 60, 30);

        cancel.setText("Cancel");
        cancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelActionPerformed(evt);
            }
        });

        getContentPane().add(cancel);
        cancel.setBounds(190, 120, 90, 30);

        jLabel4.setText("Length");
        getContentPane().add(jLabel4);
        jLabel4.setBounds(230, 10, 50, 14);

        getContentPane().add(length);
        length.setBounds(230, 30, 50, 24);

        java.awt.Dimension screenSize = java.awt.Toolkit.getDefaultToolkit().getScreenSize();
        setBounds((screenSize.width-300)/2, (screenSize.height-180)/2, 300, 180);
    }//GEN-END:initComponents

    private void nameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nameActionPerformed
        // Add your handling code here:
    }//GEN-LAST:event_nameActionPerformed

    private void cancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelActionPerformed
        dispose();
    }//GEN-LAST:event_cancelActionPerformed

    private void okActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_okActionPerformed
        try
        {
            String SQL = "ALTER TABLE "+tableName+" ADD "+SQLNormalizer.columnName(name.getText(), handler);
            
            SQL += " " + type.getSelectedItem().toString();
            
            if(length.getText().trim().length() > 0) SQL += "("+length.getText().trim()+")";
            
            if(nullable.isSelected()) SQL += " NULL";
            else SQL += " NOT NULL";
            
            if(autonumber.isSelected()) SQL += " "+handler.getCurrentProfile().autonumber.getDataType();
            if(defaultValue.getText().trim().length() > 0) SQL += " DEFAULT "+addDelimiters(defaultValue.getText());
            
            System.out.println(SQL);
            
            handler.executeSQLChange(SQL);
            
            /*if(defaultValue.getText().trim().length() > 0) 
            {
                SQL = "ALTER TABLE "+tableName+" ALTER "+SQLNormalizer.columnName(name.getText(), handler)+" SET DEFAULT "+addDelimiters(defaultValue.getText());
            
                System.out.println(SQL);

                handler.executeSQLChange(SQL);
            }*/
            
            dispose();
        }
        catch(Exception e)
        {
            e.printStackTrace();
            ErrorReport.displayError(e, this);
        }
    }//GEN-LAST:event_okActionPerformed
    
    /** Closes the dialog */
    private void closeDialog(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_closeDialog
        setVisible(false);
        dispose();
    }//GEN-LAST:event_closeDialog
    
    private String addDelimiters(String value)
    {
        boolean dot = false;
        boolean numbers = false;
        boolean delimiter = false;
        boolean multidot = false;
        boolean letters = false;
        boolean space = false;
        boolean openParen = false;
        boolean closeParen = false;
        boolean symbols = false;
        
        char character;
        
        for(int i=0; i<value.length(); i++)
        {
            character = value.charAt(i);
            
            if(character == '.')
            {
                if(dot) multidot = true;
                else dot = true;
            }
            else if(character == '(') openParen = true;
            else if(character == ')') closeParen = true;
            else if(Character.isDigit(character)) numbers = true;
            else if(Character.isLetter(character)) letters = true;
            else if(Character.isSpace(character)) space = true;
            else if(character == '\'') delimiter = true;
            else symbols = true;
        }
        
        if(openParen && closeParen) return value;
        if(delimiter || value.equals("true") || value.equals("false")) return value;
        if(letters || space || multidot || symbols) return "'"+value+"'";
        if(numbers) return value;
        
        return "'"+value+"'";
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) 
    {
        new ColumnEditor("testtable", new JFrame(), true).show();
    }
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox autonumber;
    private javax.swing.JButton cancel;
    private javax.swing.JTextField defaultValue;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JTextField length;
    private javax.swing.JTextField name;
    private javax.swing.JCheckBox nullable;
    private javax.swing.JButton ok;
    private javax.swing.JComboBox type;
    // End of variables declaration//GEN-END:variables
    
}
