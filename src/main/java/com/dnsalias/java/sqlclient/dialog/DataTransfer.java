/*
 * DataTransfer.java
 *
 * Created on May 16, 2002, 2:22 PM
 */

package com.dnsalias.java.sqlclient.dialog;

import java.awt.*;
import java.sql.*;
import javax.swing.*;

import com.dnsalias.java.sqlclient.*;
import com.dnsalias.java.sqlclient.util.*;

/**
 *
 * @author  jbanes
 */
public class DataTransfer extends JInternalFrame implements Runnable
{
    private SQLClientHandler source;
    private SQLClientHandler destination;
    
    private String sourceTable;
    private String destTable;
    
    private Thread thread = new Thread(this);
    private boolean cancelled = false;
    
    /** Creates new form DataTransfer */
    public DataTransfer(SQLClientHandler source, SQLClientHandler destination, String sourceTable, String destTable) 
    {
        initComponents();
        
        this.source = source;
        this.destination = destination;
        this.sourceTable = sourceTable;
        this.destTable = destTable;
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents()//GEN-BEGIN:initComponents
    {
        jPanel1 = new javax.swing.JPanel();
        close = new javax.swing.JButton();
        cancel = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        records = new javax.swing.JLabel();
        completion = new javax.swing.JLabel();
        
        setTitle("Copying data...");
        setIconifiable(true);
        jPanel1.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.RIGHT));
        
        close.setText("Close");
        close.setEnabled(false);
        close.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                closeActionPerformed(evt);
            }
        });
        
        jPanel1.add(close);
        
        cancel.setText("Cancel");
        cancel.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                cancelActionPerformed(evt);
            }
        });
        
        jPanel1.add(cancel);
        
        getContentPane().add(jPanel1, java.awt.BorderLayout.SOUTH);
        
        jPanel2.setLayout(new java.awt.GridLayout(2, 0));
        
        records.setText("Transfered 0 records");
        records.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jPanel2.add(records);
        
        completion.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jPanel2.add(completion);
        
        getContentPane().add(jPanel2, java.awt.BorderLayout.CENTER);
        
        setBounds(100, 100, 300, 200);
    }//GEN-END:initComponents

    private void cancelActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_cancelActionPerformed
    {//GEN-HEADEREND:event_cancelActionPerformed
        cancelled = true;
    }//GEN-LAST:event_cancelActionPerformed

    private void closeActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_closeActionPerformed
    {//GEN-HEADEREND:event_closeActionPerformed
        dispose();
    }//GEN-LAST:event_closeActionPerformed

    public void start()
    {
        thread.start();
    }
    
    public void run()
    {
        try
        {
            PreparedStatement statement = source.createPreparedStatement("select * from "+SQLNormalizer.tableName(sourceTable, source));
            ResultSet set = statement.executeQuery();
            ResultSetMetaData meta = set.getMetaData();
            String[] colList = destination.getDatabaseColumnList(destTable);

            int total = 0;
            int count = meta.getColumnCount();
            String values = "(";
            String columns = "(";
            String sql;

            for(int i=0; i<count; i++)
            {
                if(i > 0) 
                {
                    values += ", ";
                    columns += ", ";
                }
                
                values += "?";
                columns += SQLNormalizer.columnName(colList[i], destination);
            }

            values += ")";
            columns += ")";

            sql = "insert into "+SQLNormalizer.tableName(destTable, destination)+" "+columns+" values "+values;
            
            System.out.println(sql);
            
            statement = destination.createPreparedStatement(sql);
            
            while(set.next() && !cancelled)
            {
                for(int i=0; i<count; i++) 
                {
                    Object value = set.getObject(i+1);
                    
                    if(value == null) statement.setNull(i+1, meta.getColumnType(i+1));
                    else statement.setObject(i+1, value);
                }

                statement.executeUpdate();
                statement.clearParameters();

                total++;

                records.setText("Transferred "+total+" records");
            }
            
            set.close();
            
            if(!cancelled) completion.setText("Transfer completed successfully");
            else completion.setText("Transfer cancelled");
        }
        catch(Exception e)
        {
            e.printStackTrace();
            completion.setText("Transfer failed");
            
            Component parent = this;
            
            while(parent.getParent() != null) parent = parent.getParent();
            
            ErrorReport.displayError(e, (Frame)parent);
        }
        
        close.setEnabled(true);
        cancel.setEnabled(false);
    }    


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel jPanel1;
    private javax.swing.JButton close;
    private javax.swing.JButton cancel;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JLabel records;
    private javax.swing.JLabel completion;
    // End of variables declaration//GEN-END:variables

}
